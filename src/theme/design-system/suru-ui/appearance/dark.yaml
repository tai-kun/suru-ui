color:
  grey:
    1200: var(--sui-color-white)
    alpha:
      50:  "hsla(0,0%,99%,0.91)"
      100: "hsla(0,0%,100%,0.8)"
      200: "hsla(0,0%,99%,0.71)"
      300: "hsla(0,0%,100%,0.6)"
      400: "hsla(0,0%,99%,0.59)"
      420: "hsla(0,0%,100%,0.5)"
      500: "hsla(0,0%,98%,0.47)"
      536: "hsla(0,0%,100%,0.4)"
      600: "hsla(0,0%,97%,0.31)"
      700: "hsla(0,0%,100%,0.2)"
      800: "hsla(0,0%,93%,0.11)"
      900: "hsla(0,0%,0%,1)"
      1200: var(--sui-color-white)
    naked:
      normal: transparent
      hover:  var(--sui-color-grey-alpha-100)
      active: var(--sui-color-grey-alpha-200)
    solid:
      normal: var(--sui-color-grey-1200)
      hover:  var(--sui-color-grey-1000)
      active: var(--sui-color-grey-800)
    liquid:
      normal: var(--sui-color-grey-alpha-100)
      hover:  var(--sui-color-grey-alpha-200)
      active: var(--sui-color-grey-alpha-300)
    text:
      lc: var(--sui-color-grey-solid-active)
      hc: var(--sui-color-grey-solid-normal)
    ring:
      lc: var(--sui-color-grey-text-lc)
      hc: var(--sui-color-grey-text-hc)
  blue:
    alpha:
      50:   "hsla(215,92%,95%,1)"
      100:  "hsla(219,100%,93%,1)"
      200:  "hsla(220,97%,89%,0.99)"
      300:  "hsla(223,98%,81%,0.98)"
      400:  "hsla(223,97%,72%,0.98)"
      500:  "hsla(223,98%,64%,0.97)"
      600:  "hsla(227,99%,60%,0.99)"
      700:  "hsla(230,99%,58%,0.96)"
      800:  "hsla(226,100%,50%,0.85)"
      900:  "hsla(233,100%,50%,0.76)"
      1000: "hsla(233,100%,49%,0.57)"
      1100: "hsla(240,100%,49%,0.45)"
      1200: "hsla(240,100%,50%,0.38)"
    naked:
      normal: transparent
      hover:  var(--sui-color-blue-alpha-100)
      active: var(--sui-color-blue-alpha-200)
    solid:
      normal: var(--sui-color-blue-900)
      hover:  var(--sui-color-blue-800)
      active: var(--sui-color-blue-700)
    liquid:
      normal: var(--sui-color-blue-alpha-100)
      hover:  var(--sui-color-blue-alpha-200)
      active: var(--sui-color-blue-alpha-300)
    text:
      lc: var(--sui-color-blue-solid-active)
      hc: var(--sui-color-blue-solid-normal)
    ring:
      lc: var(--sui-color-blue-text-lc)
      hc: var(--sui-color-blue-text-hc)
  lightBlue:
    alpha:
      50:   "hsla(204,100%,97%,1)"
      100:  "hsla(206,100%,93%,1)"
      200:  "hsla(206,100%,88%,1)"
      300:  "hsla(205,100%,80%,1)"
      400:  "hsla(205,100%,67%,1)"
      500:  "hsla(205,100%,61%,1)"
      600:  "hsla(206,100%,50%,0.95)"
      700:  "hsla(208,98%,51%,0.85)"
      800:  "hsla(208,100%,50%,0.75)"
      900:  "hsla(210,100%,50%,0.68)"
      1000: "hsla(212,100%,50%,0.55)"
      1100: "hsla(212,100%,49%,0.42)"
      1200: "hsla(212,100%,49%,0.3)"
    naked:
      normal: transparent
      hover:  var(--sui-color-lightBlue-alpha-100)
      active: var(--sui-color-lightBlue-alpha-200)
    solid:
      normal: var(--sui-color-lightBlue-900)
      hover:  var(--sui-color-lightBlue-800)
      active: var(--sui-color-lightBlue-700)
    liquid:
      normal: var(--sui-color-lightBlue-alpha-100)
      hover:  var(--sui-color-lightBlue-alpha-200)
      active: var(--sui-color-lightBlue-alpha-300)
    text:
      lc: var(--sui-color-lightBlue-solid-active)
      hc: var(--sui-color-lightBlue-solid-normal)
    ring:
      lc: var(--sui-color-lightBlue-text-lc)
      hc: var(--sui-color-lightBlue-text-hc)
  green:
    alpha:
      50:   "hsla(142,80%,96%,0.97)"
      100:  "hsla(145,95%,92%,0.9)"
      200:  "hsla(147,92%,86%,0.84)"
      300:  "hsla(148,96%,78%,0.78)"
      400:  "hsla(149,96%,71%,0.73)"
      500:  "hsla(151,98%,62%,0.68)"
      600:  "hsla(151,98%,61%,0.62)"
      700:  "hsla(151,98%,60%,0.55)"
      800:  "hsla(151,99%,60%,0.48)"
      900:  "hsla(150,95%,58%,0.36)"
      1000: "hsla(150,99%,58%,0.28)"
      1100: "hsla(151,97%,57%,0.21)"
      1200: "hsla(151,90%,52%,0.14)"
    naked:
      normal: transparent
      hover:  var(--sui-color-green-alpha-100)
      active: var(--sui-color-green-alpha-200)
    solid:
      normal: var(--sui-color-green-900)
      hover:  var(--sui-color-green-800)
      active: var(--sui-color-green-700)
    liquid:
      normal: var(--sui-color-green-alpha-100)
      hover:  var(--sui-color-green-alpha-200)
      active: var(--sui-color-green-alpha-300)
    text:
      lc: var(--sui-color-green-solid-active)
      hc: var(--sui-color-green-solid-normal)
    ring:
      lc: var(--sui-color-green-text-lc)
      hc: var(--sui-color-green-text-hc)
  yellow:
    alpha:
      50:   "hsla(45,93%,94%,0.99)"
      100:  "hsla(48,100%,85%,1)"
      200:  "hsla(47,100%,75%,1)"
      300:  "hsla(47,100%,62%,1)"
      400:  "hsla(47,100%,50%,1)"
      500:  "hsla(47,100%,50%,0.93)"
      600:  "hsla(47,100%,50%,0.83)"
      700:  "hsla(47,100%,50%,0.72)"
      800:  "hsla(47,100%,50%,0.65)"
      900:  "hsla(47,100%,49%,0.58)"
      1000: "hsla(46,100%,49%,0.51)"
      1100: "hsla(47,100%,49%,0.44)"
      1200: "hsla(47,100%,50%,0.38)"
    naked:
      normal: transparent
      hover:  var(--sui-color-yellow-alpha-100)
      active: var(--sui-color-yellow-alpha-200)
    solid:
      normal: var(--sui-color-yellow-900)
      hover:  var(--sui-color-yellow-800)
      active: var(--sui-color-yellow-700)
    liquid:
      normal: var(--sui-color-yellow-alpha-100)
      hover:  var(--sui-color-yellow-alpha-200)
      active: var(--sui-color-yellow-alpha-300)
    text:
      lc: var(--sui-color-yellow-solid-active)
      hc: var(--sui-color-yellow-solid-normal)
    ring:
      lc: var(--sui-color-yellow-text-lc)
      hc: var(--sui-color-yellow-text-hc)
  red:
    alpha:
      50:   "hsla(0,79%,96%,1)"
      100:  "hsla(0,100%,93%,1)"
      200:  "hsla(0,100%,87%,1)"
      300:  "hsla(0,100%,79%,1)"
      400:  "hsla(0,100%,79%,1)"
      500:  "hsla(0,100%,67%,1)"
      600:  "hsla(0,99%,61%,1)"
      700:  "hsla(0,100%,50%,0.99)"
      800:  "hsla(0,100%,50%,0.93)"
      900:  "hsla(0,100%,50%,0.81)"
      1000: "hsla(0,100%,49%,0.67)"
      1100: "hsla(0,100%,49%,0.53)"
      1200: "hsla(0,100%,49%,0.39)"
    naked:
      normal: transparent
      hover:  var(--sui-color-red-alpha-100)
      active: var(--sui-color-red-alpha-200)
    solid:
      normal: var(--sui-color-red-900)
      hover:  var(--sui-color-red-800)
      active: var(--sui-color-red-700)
    liquid:
      normal: var(--sui-color-red-alpha-100)
      hover:  var(--sui-color-red-alpha-200)
      active: var(--sui-color-red-alpha-300)
    text:
      lc: var(--sui-color-red-solid-active)
      hc: var(--sui-color-red-solid-normal)
    ring:
      lc: var(--sui-color-red-text-lc)
      hc: var(--sui-color-red-text-hc)

  brand:   blue
  # accent:  <- brand を primary としたときの secondary に相当させるか？
  neutral: grey
  info:    lightBlue
  error:   red
  warning: yellow
  success: green

  canvas:
    main:     var(--sui-color-grey-50)
    paper:    var(--sui-color-grey-alpha-100)
    disabled: var(--sui-color-grey-600)

  text:
    body:        var(--sui-color-white)
    disabled:    var(--sui-color-grey-400)
    description: var(--sui-color-grey-700)

  # link: <- $build で設定される。

ring:
  focus:
    color: var(--sui-color-yellow-700)

$build:
  imports:
    color2.0: digital.go.jp/style/Color2.0
    linktext: digital.go.jp/style/LinkText

  patches:
    - name: ニュートラルカラーを設定する
      operations:
        - name: "ニュートラルカラーを digital.go.jp から /color にコピーする"
          mode: copy
          path: /color/$[[ white, black ]]
          from: /color2.0/$[[ white, black ]]
          strategy: merge

    - name: 基本的なカラーを設定する
      matrix:
        color: [ grey, blue, lightBlue, green, yellow, red ]
      operations:
        - name: "色を digital.go.jp から /color にコピーする"
          mode: copy
          path: /color/${{ matrix.color }}
          from: /color2.0/${{ matrix.color }}
          strategy: merge
        - name: "コントラスト比の情報を持つ white と black を削除"
          mode: remove
          path: /color/${{ matrix.color }}/$[[ white, black ]]

    - name: "grey を 50 から 1200 のスケールに変換する"
      matrix:
        path: [ "", "/alpha" ]
      operations:
        - name: "420 から 900 のスケールを 500 から 1100 に変換する"
          mode: move
          path: /color/grey${{ matrix.path }}/$[[ 1100, 1000, 900, 800, 700, 600, 500 ]]
          from: /color/grey${{ matrix.path }}/$[[  900,  800, 700, 600, 536, 500, 420 ]]
        - name: "50 から 1100 のスケールを反転させる (1)"
          mode: copy
          path: /color/_grey${{ matrix.path }}/$[[ 1100, 1000,  900, 800, 700, 600, 500, 400, 300, 200,  100,   50 ]]
          from: /color/grey${{ matrix.path }}/$[[    50,  100,  200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100 ]]
        - name: "50 から 1100 のスケールを反転させる (2)"
          mode: move
          path: /color/grey${{ matrix.path }}/$[[  1100, 1000, 900, 800, 700, 600, 500, 400, 300, 200, 100, 50 ]]
          from: /color/_grey${{ matrix.path }}/$[[ 1100, 1000, 900, 800, 700, 600, 500, 400, 300, 200, 100, 50 ]]

    - name: "各カラーのスケールを反転される"
      matrix:
        path:  [ "", "/alpha" ]
        color: [ blue, lightBlue, green, yellow, red ]
      operations:
        - name: もとのデータを一時的にコピーする
          mode: copy
          path: /color/_${{ matrix.color }}${{ matrix.path }}/$[[ 1200, 1100, 1000, 900, 800, 700, 600, 500, 400, 300, 200, 100, 50 ]]
          from: /color/${{ matrix.color }}${{ matrix.path }}/$[[  1200, 1100, 1000, 900, 800, 700, 600, 500, 400, 300, 200, 100, 50 ]]
        - name: もとのデータへスケールを反転させて移動する
          mode: move
          path: /color/${{ matrix.color }}${{ matrix.path }}/$[[ 1200, 1100, 1000, 900, 800, 700, 600, 500, 400, 300,  200,  100,   50 ]]
          from: /color/_${{ matrix.color }}${{ matrix.path }}/$[[  50,  100,  200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200 ]]

    - name: "セマンティックカラーの各スケールを CSS 変数に置き換える"
      matrix:
        color: [ brand, neutral, info, error, warning, success ]
        scale: [ 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200 ]
      operations:
        - name: "セマンティックカラーの CSS 変数マップを作成する"
          mode: add
          path: /color/_${{ matrix.color }}/${{ matrix.scale }}
          value: "var(--sui-color-${{ /color/${{ matrix.color }} }}-${{ matrix.scale }})"
        - name: "不透明なセマンティックカラーの CSS 変数マップを作成する"
          mode: add
          path: /color/_${{ matrix.color }}/alpha/${{ matrix.scale }}
          value: "var(--sui-color-${{ /color/${{ matrix.color }} }}-alpha-${{ matrix.scale }})"

    - name: "セマンティックカラーの各バリアントを CSS 変数に置き換える"
      matrix:
        color:   [ brand, neutral, info, error, warning, success ]
        variant: [ naked, solid, liquid ]
        state:   [ normal, hover, active ]
      operations:
        - name: "セマンティックカラーを CSS 変数に置き換える"
          mode: add
          path: /color/_${{ matrix.color }}/${{ matrix.variant }}/${{ matrix.state }}
          value: "var(--sui-color-${{ /color/${{ matrix.color }} }}-${{ matrix.variant }}-${{ matrix.state }})"

    - name: "セマンティックカラーのテキストを CSS 変数に置き換える"
      matrix:
        color: [ brand, neutral, info, error, warning, success ]
        target: [ text, ring ]
        contrast: [ lc, hc ]
      operations:
        - name: "セマンティックカラーを CSS 変数に置き換える"
          mode: add
          path: /color/_${{ matrix.color }}/${{ matrix.target }}/${{ matrix.contrast }}
          value: "var(--sui-color-${{ /color/${{ matrix.color }} }}-${{ matrix.target }}-${{ matrix.contrast }})"

    - name: セマンティックカラーを設定する
      matrix:
        color: [ brand, neutral, info, error, warning, success ]
      operations:
        - name: "セマンティックカラーを CSS 変数に置き換える"
          mode: move
          path: /color/${{ matrix.color }}
          from: /color/_${{ matrix.color }}

    - name: リンクテキストの色を設定する
      matrix:
        state: [ normal, hover, active, visited ]
      operations:
        - name: リンクテキストの色をコピーする
          mode: copy
          path: /color/link/${{ matrix.state }}
          from: /color2.0/${{ /linktext/${{ matrix.state }} }}

  exports:
    include:
      - "**"
